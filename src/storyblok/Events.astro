---
import type { EventsStoryblok } from "@/component-types";
import EventCard from "@/components/EventCard";

const { blok } = Astro.props as { blok: EventsStoryblok };

const upcomingEvents = blok.events
  ?.filter((event) => new Date(event.date ?? "") > new Date())
  .sort(
    (a, b) =>
      new Date(a.date ?? "").getTime() - new Date(b.date ?? "").getTime(),
  );

const pastEvents = blok.events
  ?.filter((event) => new Date(event.date ?? "") < new Date())
  .sort(
    (a, b) =>
      new Date(b.date ?? "").getTime() - new Date(a.date ?? "").getTime(),
  );
---

<video
  autoplay
  playsinline
  controls
  class="w-full sm:w-[80%] rounded-xl h-auto mx-auto"
  onloadedmetadata="this.volume=0.5"
>
  <source src={blok.video_source?.url} type="video/mp4" />
</video>
<h2 class="text-xl sm:text-2xl sm:mx-auto mt-4 sm:mt-16">
  Please note that all times are in PST.
</h2>
<div class="flex flex-col gap-8 mt-8 sm:w-[67%] mx-auto text-left">
  {upcomingEvents.map((event) => <EventCard event={event} />)}
</div>
<h2 class="text-2xl sm:text-3xl mt-16 sm:mt-32">Past Events</h2>
<div class="flex flex-col gap-8 mt-8 sm:w-[67%] mx-auto text-left">
  {pastEvents.map((event) => <EventCard event={event} />)}
</div>
